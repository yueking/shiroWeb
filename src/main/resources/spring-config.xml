<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
         http://www.springframework.org/schema/beans
         http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/mvc
         http://www.springframework.org/schema/mvc/spring-mvc.xsd
         http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context.xsd">


    <!--扫描controller的注解，别的不扫描-->
    <context:component-scan base-package="com.yueking.core">
        <!--<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>-->
    </context:component-scan>
    <import resource="spring-shiro-web.xml"/>

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>

    <!--配置视图解析器-->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!--jsp所在的目录-->
        <property name="prefix" value="/WEB-INF/pages/"/>
        <!--文件的后缀名-->
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--设置静态资源不过滤-->
    <!--<mvc:resources location="/ui/" mapping="/ui/**"/>-->
    <!--<mvc:resources location="/WEB-INF/ui/" mapping="/ui/**"/>-->
    <!--<mvc:resources location="/css/" mapping="/css/**" />-->
    <!--<mvc:resources location="/images/" mapping="/images/**" />-->
    <!--<mvc:resources location="/js/" mapping="/js/**" />-->
    <!--开启对springMVC注解的支持-->
    <!--<mvc:annotation-driven/>-->


    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:jdbc.properties</value>
            </list>
        </property>
    </bean>

    <!--<aop:aspectj-autoproxy />-->

    <!-- 开启spring 配置扫描 (beware that this does not enable mapper scanning!) -->
    <!--<context:component-scan base-package="com.yueking.core.shiro.service"/>-->
    <!--<import resource="spring-dao.xml"/>-->
    <!--<import resource="spring-dao-hibernate.xml"/>-->
    <!--<import resource="spring-dao-mybatis.xml"/>-->
    <!--<import resource="spring-service-yueking.xml"/>-->
    <!--<import resource="spring-cache-ehcache.xml"/>-->
    <!--<import resource="spring-cache-ehcache-dict.xml"/>-->

    <!-- 阿里 druid数据库连接池 -->
    <!--<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">-->
        <!--&lt;!&ndash; 数据库基本信息配置 &ndash;&gt;-->
        <!--<property name="url" value="${jdbc.url}"/>-->
        <!--<property name="username" value="${jdbc.username}"/>-->
        <!--<property name="password" value="${jdbc.password}"/>-->
        <!--<property name="driverClassName" value="${jdbc.driverClassName}"/>-->
        <!--<property name="filters" value="${filters}"/>-->
        <!--&lt;!&ndash; 最大并发连接数 &ndash;&gt;-->
        <!--<property name="maxActive" value="${maxActive}"/>-->
        <!--&lt;!&ndash; 初始化连接数量 &ndash;&gt;-->
        <!--<property name="initialSize" value="${initialSize}"/>-->
        <!--&lt;!&ndash; 配置获取连接等待超时的时间 &ndash;&gt;-->
        <!--<property name="maxWait" value="${maxWait}"/>-->
        <!--&lt;!&ndash; 最小空闲连接数 &ndash;&gt;-->
        <!--<property name="minIdle" value="${minIdle}"/>-->
        <!--&lt;!&ndash; 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 &ndash;&gt;-->
        <!--<property name="timeBetweenEvictionRunsMillis" value="${timeBetweenEvictionRunsMillis}"/>-->
        <!--&lt;!&ndash; 配置一个连接在池中最小生存的时间，单位是毫秒 &ndash;&gt;-->
        <!--<property name="minEvictableIdleTimeMillis" value="${minEvictableIdleTimeMillis}"/>-->
        <!--<property name="validationQuery" value="${validationQuery}"/>-->
        <!--<property name="testWhileIdle" value="${testWhileIdle}"/>-->
        <!--<property name="testOnBorrow" value="${testOnBorrow}"/>-->
        <!--<property name="testOnReturn" value="${testOnReturn}"/>-->
        <!--<property name="maxOpenPreparedStatements" value="${maxOpenPreparedStatements}"/>-->
        <!--&lt;!&ndash; 打开removeAbandoned功能 &ndash;&gt;-->
        <!--<property name="removeAbandoned" value="${removeAbandoned}"/>-->
        <!--&lt;!&ndash; 1800秒，也就是30分钟 &ndash;&gt;-->
        <!--<property name="removeAbandonedTimeout" value="${removeAbandonedTimeout}"/>-->
        <!--&lt;!&ndash; 关闭abanded连接时输出错误日志 &ndash;&gt;-->
        <!--<property name="logAbandoned" value="${logAbandoned}"/>-->
    <!--</bean>-->


    <!--<bean id="sessionFactoryHibernate" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">-->
        <!--<property name="dataSource" ref="dataSource"/>-->
        <!--<property name="hibernateProperties">-->
            <!--<props>-->
                <!--<prop key="hibernate.dialect">${hibernate.dialect}</prop>-->
                <!--<prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>-->
                <!--<prop key="hibernate.format_sql">${hibernate.format_sql}</prop>-->
                <!--<prop key="hibernate.show_sql">${hibernate.show_sql}</prop>-->
            <!--</props>-->
        <!--</property>-->

    <!--</bean>-->

    <!--hibernateTemplate 开启缓存-->
    <!--<bean id="hibernateTemplate" class="org.springframework.orm.hibernate5.HibernateTemplate">-->
        <!--<property name="sessionFactory" ref="sessionFactoryHibernate"/>-->
        <!--<property name="cacheQueries" value="true"/>-->
    <!--</bean>-->

    <!-- Add new DAOs here -->
    <!--<bean id="baseDaoHibernate" abstract="true" class="org.springframework.orm.hibernate5.support.HibernateDaoSupport">-->
        <!--<property name="hibernateTemplate" ref="hibernateTemplate"/>-->
    <!--</bean>-->

    <!--<bean id="transactionManagerHibernate" class="org.springframework.orm.hibernate5.HibernateTransactionManager">-->
        <!--<property name="sessionFactory" ref="sessionFactoryHibernate"/>-->
    <!--</bean>-->

    <!--<bean id="userDao" class="com.yueking.core.shiro.dao.UserDao" abstract="true"/>-->
    <!--<bean id="roleDao" class="com.yueking.core.shiro.dao.RoleDao" abstract="true"/>-->
    <!--<bean id="permissionDao" class="com.yueking.core.shiro.dao.PermissionDao" abstract="true"/>-->

    <!--<bean id="userService" class="com.yueking.core.shiro.service.impl.UserServiceImpl"/>-->
    <!--<bean id="roleService" class="com.yueking.core.shiro.service.impl.RoleServiceImpl"/>-->
    <!--<bean id="permissionService" class="com.yueking.core.shiro.service.impl.PermissionServiceImpl"/>-->


</beans>